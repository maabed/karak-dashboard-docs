# Getting Started

Welcome to Blue Dashboard! You can use our dashboard to use multiple features and pages in your website, all you have to do is to <a href="https://github.com/new-release/Blue-dashboard">download our dashboard or fork it from github</a>.



//////////////// Forms

# Forms

Our Forms utility provides a variety of customized forms elements such as input fields, check boxes, date pickers, etc.

## Input Fields

Blue Dashboard provide a collection of input fields such that you can easily use in your website.

All you need to do is to include Blue Dashboard customized CSS file in addition to <a href="http://materializecss.com/">materializecss</a> framework JS file.

`<link type="text/css" href="assets/css/styles.css" />`<br>
`<script type="text/javascript" src="materialize.min.js"></script>`

> To use our customized input fields:

```HTML
Basic input field:

<div class="input-field">
    <input id="full_name" name="full_name" type="text" class="validate">
    <label for="full_name">Full Name*</label>
</div>

Input field with icon:

<div class="input-field">
    <i class="material-icons prefix">
        <i class="fa fa-user" aria-hidden="true"></i>
    </i>
    <input id="user_prefix" name="email" type="text" class="validate user_prefix">
    <label for="user_prefix" class="user_prefix">Username</label>
</div>
```
## Ranges

In order to use the Ranges slider you will have to include two CSS files the first one defines the basic look for the slider and the second one for the theme you choose and the JS file for the library.

`<link type="text/css" href="ion.rangeSlider.css">`<br>
`<link type="text/css" href="ion.rangeSlider.skinNice.css">`<br>
`<script type="text/javascript" src="ion.rangeSlider.min.js"></script>`

<aside class="notice">
Don't forget to initialize the range in the javascript 
</aside>
> To use our ranges:

```HTML
<input type="text" id="no-params" name="example_name" value="" />
```

```javascript
$('#no-params').ionRangeSlider();
```
##Toggles

If you wanted to use the slide toggles all you need to do is include Blue Dashboard styles file. <br>
`<link type="text/css" href="assets/css/styles.css" />`<br>

You can also change the color of the toggle by using one of the colors classes such as: <br>
<code>.ch-toggle-green</code> <br>
<code>.ch-toggle-red</code> 
> To use slide toggle:

```HTML
<div class="toggleswitch">
    <input id="toggle-checked" class="ch-toggle ch-toggle-green" type="checkbox">
    <label for="toggle-checked"></label>
</div>
```
## Dropdown Select

The dropdown selects are a very common input tool so in order to use them you should include the link for the Select2 library CSS file and JS file.

`<link type="text/css" href="select2.min.css">` <br>
`<script type="text/javascript" src="select2.min.js"></script>`<br>

The dropdown select includes variety of features such as: <br>
<code>.select2-init-single</code> <br>
<code>.select2-init-multiple</code> <br>
<code>.select2-init-images</code>
<aside class="notice">
Don't forget to initialize the select dropdown in the javascript 
</aside>
> To use select dropdown:

```HTML
<select class="select-display select2-init-single selectpicker">
    <option value="Oklahoma">Oklahoma</option>
    <option value="Newyork">New york</option>
    <option value="California">California</option>
    <option value="Texas">Texas</option>
    <option value="Florida">Florida</option>
</select>
```
```javascript
$('.select2-init-single').select2();
$('.select2-init-multiple').select2();
$('.select2-init-images').select2({
  templateResult: formatState
});
```

## Checkboxes

In Blue Dashboard you can find many checkboxes styles such as colored checkboxes, circled checkboxes and yes/no checkboxes.


In order to use the colored checkboxes all you need to do is to include Blue Dashboard styles file.<br>

`<link type="text/css" href="assets/css/styles.css" />`<br>

As for the yes/no checkboxes you need to include a JS file for the <a href="https://vsn4ik.github.io/bootstrap-checkbox/">Bootstrap checkbox</a> library. <br>

`<script type="text/javascript" src="bootstrap-checkbox.min.js"></script>`

<aside class="notice">
Don't forget to initialize the yes/no checkbox in the javascript 
</aside>
> To use checkboxes:

```HTML
<!--  Colored checkboxes: -->

<div class="checkbox">
    <input id="checkbox1" type="checkbox" checked>
    <label class="fontsize" for="checkbox1"> A simple checkbox </label>
</div>

<!-- Circle checkboxes: -->

<div class="checkbox checkbox-circle">
    <input id="checkbox-circle-default" type="checkbox">
    <label for="checkbox-circle-default">Default</label>
</div>
```
```javascript
$('#toggleCheckbox-yes-green').checkboxpicker();
```

## Datepickers
Blue Dashboard provides many datepickers styles including range datepickers, simple datepickers and advanced datepickers.

In order to use range datepickers you need to include: <br>

`<link type="text/css" href="/daterangepicker.css" />` <br>
`<script type="text/javascript" src="daterangepicker.js"></script>`

In addition to datepickers you can use clockpicker by including: <br>

`<link type="text/css" href="bootstrap-clockpicker.min.css">` <br>
`<script type="text/javascript" src="bootstrap-clockpicker.min.js"></script>` <br>

You can also use the advanced datepicker by including:<br>

`<link type="text/css" href="datepicker.min.css">`<br>
`<script type="text/javascript" src="datepicker.min.js"></script>`<br>
`<script type="text/javascript" src="datepicker.en.js"></script>`

<aside class="notice">
Don't forget to initialize the range datepickers in the javascript 
</aside>
> To use datepickers:

```HTML
<!-- Range Datepicker: -->

<input type="text" name="daterange" class="form-control simple" value="01/01/2015 1:30 PM - 01/01/2015 2:00 PM" />

<!-- Predefined Ranges: -->

<div id="reportrange" class="simple data-range">
    <i class="glyphicon glyphicon-calendar fa fa-calendar"></i>&nbsp;
    <span></span> <b class="caret"></b>
</div>

<!-- Simple datepicker: -->

<input type="text" name="birthdate" class="form-control simple" value="10/24/1984" />

<!-- Clockpicer: -->

<div class="input-group clockpicker simple" data-placement="right" data-align="top" data-autoclose="true">
  <input type="text" class="form-control" value="13:14">
  <span class="input-group-addon">
    <span class="glyphicon glyphicon-time"></span>
  </span>
</div>

<!-- Advanced datepicker: -->

<div class="datepicker-here simple" data-language='en'></div>
```

```javascript
// Range Datepicker:

$('input[name="daterange"]').daterangepicker({
  timePicker: true,
  timePickerIncrement: 30,
  locale: {
    format: 'MM/DD/YYYY h:mm A'
  }
});

// Predefined ranges:

$('#reportrange').daterangepicker({
  startDate: start,
  endDate: end,
  ranges: {
    'Today': [moment(), moment()],
    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
    'This Month': [moment().startOf('month'), moment().endOf('month')],
    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
  }
}, cb);

// Simple datepicker:

$('input[name="birthdate"]').daterangepicker({
  singleDatePicker: true,
  showDropdowns: false
});

// Clockpicker

$('.clockpicker').clockpicker();

// Advanced datepicker
$('.datepicker-here').datepicker();

```
## Tag Inputs

You can use Tag Inputs to insert tags into input fields and here is the way to do that.

Include those two files into your code: <br>

`<link type="text/css" href="bootstrap-tagsinput.css">` <br>
`<script type="text/javascript" src="bootstrap-tagsinput.js"></script>`

<aside class="notice">
The objects tags amd the categorized tags needs to be initialized in javascript and the the values added to them there.
</aside>
> To use the tags inputs:

```HTML
<!-- Markup -->

<input type="text" value="Amsterdam,Washington" data-role="tagsinput" />

<!-- True multi value -->

<select multiple data-role="tagsinput">
    <option value="Amsterdam">Amsterdam</option>
    <option value="Washington">Washington</option>
</select>

<!-- Objects as tags -->
                                    
<input class="objects-as-tags" type="text" />


<!-- Categorizing tags -->

<input class="colored-tags" type="text" />

```

```javascript
// Objects as tags

var typeaheadTags = $('.objects-as-tags');
typeaheadTags.tagsinput({
  itemValue: 'value',
  itemText: 'text',
  typeaheadjs: {
    name: 'cities',
    displayKey: 'text',
    source: cities.ttAdapter()
  }
});

typeaheadTags.tagsinput('add', {
  'value': 1,
  'text': 'Amsterdam',
  'continent': 'Europe'
});

//Categorizing tags

var typeaheadColored = $('.colored-tags');
typeaheadColored.tagsinput({
  tagClass: function(item) {
    switch (item.continent) {
      case 'Europe':
        return 'label label-primary';
      case 'America':
        return 'label label-danger label-important';
      case 'Australia':
        return 'label label-success';
      case 'Africa':
        return 'label label-default';
      case 'Asia':
        return 'label label-warning';
    }
  },
  itemValue: 'value',
  itemText: 'text',
  typeaheadjs: {
    name: 'cities',
    displayKey: 'text',
    source: cities.ttAdapter()
  }
});
typeaheadColored.tagsinput('add', {
  'value': 1,
  'text': 'Amsterdam',
  'continent': 'Europe'
});
typeaheadColored.tagsinput('add', {
  'value': 4,
  'text': 'Washington',
  'continent': 'America'
});
```

## Drag N' Drop

If you want to add an upload field we have just the solution for you with the Drag N' Drop input.

You can use this feature by including:<br>

`<link type="text/css" rel="stylesheet" href="dropzone.css">`<br>
`<script type="text/javascript" src="dropzone.js"></script>`

> To use the drop zone:

```HTML
<div class="dropzone-min">
    <form action="/file-upload" class="dropzone" id="my-awesome-dropzone"></form>
</div>
```

## Text Editor

In order to use the customized text editor you will have to include: <br>

`<link type="text/css" rel="stylesheet" href="assets/css/text-editor.css">` <br>
`<link href="assets/vendors/summernote/summernote.css" rel="stylesheet">` <br>
`<script type="text/javascript" src="assets/vendors/summernote/summernote.js"></script>`

> To use the text editor:

```HTML

<div id="summernote">hello </div>

```

```javascript
$('#summernote').summernote({
  height: 200
});

```

/////////////////////////////// Notifications

# UI Elements

UI Elements are a very important utility to use in your website and they are very useful and give a very nice addition to any website.

In Blue Dashboard we gathered a set of elements that you will find useful and very easy to use.

## Notifications

You can use Blue Dashboard notifications in your website very easily all you have to do is include the blue dashboard styles file and :

-Choose which of the listed libraries you wish to use. <br>

1- Bootstrap alert. <br>
2- Sweet alert. <br>
3- Toastr alert.

-Include their files. <br>

1- Bootstrap alert. <br>
 - `<link type="text/css" href="bootstrap.min.css">`

 * Use the .alert class to initialize the bootstrap alert in addition to the color classes such as :
  - `.alert-success` & `.success-lighter`.

2- Sweet alert <br>
  - `<link type="text/css" href="sweetalert.css">` <br>
  - `<script type="text/javascript" src="sweetalert.min.js"></script>`

 * Initialize the sweet alert in the JS using `swal("Message")` function which can include many options. such as :
  - `type: 'warning'`, to determine the type of the alert.


3- Toastr alert. <br>
 - `<link type="text/css" href="toastr.css" />` <br>
 - `<script type="text/javascript" src="toastr.js"></script>`

 * Initialize toastr alert in the JS using `toastr['info']('Bottom Right!');` . You will have to pass the type of the alert in the function as shown before and give it a text to display, you can also control the position of the alert using it's options just by adding :
  - `toastr.options = {'positionClass': 'toast-bottom-center'}`;

```HTML
<!-- Bootstrap success alert -->

<div class="alert alert-success success-lighter">
    <strong>Success!</strong> Indicates a successful or positive action.
</div>
```

```javascript

// Sweet alert

swal("Here's a message!")

// Toastr alert

toastr.options = {
    'positionClass': 'toast-bottom-right',
    'onclick': null,
    'showDuration': '300',
    'hideDuration': '1000',
    'timeOut': '5000',
    'showMethod': 'fadeIn',
    'hideMethod': 'fadeOut'
};

toastr['info']('Bottom Right!');
```
/////////////////////////////// Modals


# Modals

The modal we use are extracted from <a href="https://v4-alpha.getbootstrap.com/components/modal/"> bootstrap framework modals </a> with a little bit of customizing on them.

* All you have to do is :
 - Include the blue dashboard style file and initialize the modal in the HTML file.
 - Use the Blue dashboard customization classes such as `.right` to use the right side modal.

* Some modals don't require customization classes such as the flat modal as shown in the example.

* You can open and close the modal in two ways:
 - Using the `data-toggle="modal"` & `data-target="#flat-modal"` attributes.
 - Using `modal( )` method.
 
```HTML
<!-- Right side modal -->

<!-- Open modal -->
<button id="modal-open" data-toggle="modal" data-toggle="modal" data-target="#right-side-modal">Open</button>

<!-- Modal -->
<div class="modal right fade" id="right-side-modal" tabindex="-1" role="dialog" aria-labelledby="right-side-modal-label">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="right-side-modal-label">Right Sidebar</h4>
            </div>
            <div class="modal-body custome-margin">
                <p class="right-modal-content"></p>
                <br>
                <div class="row">
                    <div class="col-sm-12">
                        <button type="button" class="btn btn-info center-block right-button">Action</button>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <button type="button" class="btn btn-primary center-block right-button">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- modal-content -->
    </div>
    <!-- modal-dialog -->
</div>

<!-- Flat modal -->

<!-- Open modal --> 
<button id="flat-modal" data-toggle="modal" data-target="#flat-modal">Open</button>

<!-- Modal --> 
<div class="modal fade" id="flat-modal" tabindex="-1" role="dialog" aria-labelledby="flat-modal-label">
    <div class="modal-dialog" role="document">
        <div class="modal-body">
            <div class="jumbotron">
                <input type="text" placeholder="Type anywhere to search" class="form-control flat_email">
                <i class="fa fa-search glyphicon glyphicon-search" aria-hidden="true"></i>
            </div>
        </div>
    </div>
</div>

```
/////////////////////////// Buttons
# Buttons

In Blue dashboard we used the same <a href="http://getbootstrap.com/css/#buttons">buttons in bootstrap</a> in addition to our own touch.

* If you wanted to use the Blue dashboard buttons all you need to do is :
   - Include the Blue dashboard style file.
   - Use the customized classes as shown in the example.

* Please note that if you wanted to use the buttons with hover you need to include the 
<a href="http://ianlunn.github.io/Hover/">Hover.css</a> library.

```HTML
<!-- Dashboard Buttons -->

<button type="button" class="btn btn-default">Default</button>
<button type="button" class="btn btn-primary">Primary</button>
<button type="button" class="btn btn-success">Success</button>
<button type="button" class="btn btn-info">Info</button>
<button type="button" class="btn btn-warning">Warning</button>
<button type="button" class="btn btn-danger">Danger</button>
<button type="button" class="btn btn-default btn-block">Block Button</button>

<!-- Icon Buttons -->

<button type="button" class="btn btn-info icon-btn">
    <span class="glyphicon glyphicon-search"></span> Search
</button>

<!-- Icon Buttons -->

<button type="button" class="btn outline-primary">Primary</button>

<button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">Dropdown Button
    <span class="caret"></span>
</button>
<ul class="dropdown-menu">
    <li><a>First Option</a></li>
    <li><a>Second Option</a></li>
    <li><a>Third Option</a></li>
</ul>

<!-- Grouped Buttons -->

<div class="btn-group">
    <button type="button" class="btn btn-primary">First Button</button>
    <button type="button" class="btn btn-primary">Second Button</button>
    <button type="button" class="btn btn-primary">Third Button</button>
</div>

<!-- Buttons With Hover -->

<button type="button" class="btn btn-success hvr-float">Success</button>

```

/////////////////////////////// Loading


# Loading

Loaders could be used in many places but two main functionalities are that they are used when the process the user is waiting for is determinate or indeterminate.

* Progress bars and circles are used in determinate operations.

* Loaders are used in indeterminate operations.

* Progress circles. 
  - These progress shapes were extracted from the <a href="https://kimmobrunfeldt.github.io/progressbar.js/">PROGRESS BAR.JS</a> 
  - In order to use them you need to include ProgressBar.js Javascript file. <br>
  - You can manipulate and play with the progress circle options as you like using the option provided by the library.

* Progress bars.
  - Same as the Progress circles above you should include the include ProgressBar.js Javascript file.

* Placeholder loader.
  - This famous loader is used as stand alone plugin meaning that it doesn't need any libraries, all you need to do is to include the blue dashboard Style file and use it just like the example does.

* Indeterminate loaders.
  - To use any of the indeterminate loaders all you need to do is to include the dashboard style file as before and do as the example shows.

<aside class="notice">
Please note that in blue dashboard the loaders are displayed and hidden using Jquery.
</aside>

```HTML

<!-- Progress bar.js library -->

<script type="text/javascript" src="progressbar.min.js"></script>

<!-- Progress bar-circle container -->

<div id="container"> </div>


<!-- Placeholder loader -->

<div class="timeline-item">
    <div class="animated-background facebook">
        <div class="background-masker header-top"></div>
        <div class="background-masker header-left"></div>
        <div class="background-masker header-right"></div>
        <div class="background-masker header-bottom"></div>
        <div class="background-masker subheader-left"></div>
        <div class="background-masker subheader-right"></div>
        <div class="background-masker subheader-bottom"></div>
        <div class="background-masker content-top"></div>
        <div class="background-masker content-first-end"></div>
        <div class="background-masker content-second-line"></div>
        <div class="background-masker content-second-end"></div>
        <div class="background-masker content-third-line"></div>
        <div class="background-masker content-third-end"></div>
    </div>
</div>

<!-- Indeterminate circle loader -->

<div class="loader1">
    <svg class="circular" viewBox="25 25 50 50">
        <circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="2" stroke-miterlimit="10" />
    </svg>
</div>

<!-- Indeterminate bar loader -->

<div class="loader"></div>

<!-- Indeterminate cube loader -->
<div id="loader" class="vertical--center">
    <div class="vertical-center__element">
        <span class="preloader preloader--top"></span>
        <span class="preloader preloader--bottom"></span>
    </div>
</div>

```

```javascript

// Progress circle initialization 

var bar = new ProgressBar.Circle(container, {
  strokeWidth: 6,
  easing: 'easeInOut',
  duration: 1400,
  color: '#FFEA82',
  trailColor: '#eee',
  trailWidth: 1,
  svgStyle: null
});

bar.animate(1.0);

// Progress bar initialization 

var bar = new ProgressBar.Line(container, {
  strokeWidth: 4,
  easing: 'easeInOut',
  duration: 1400,
  color: '#FFEA82',
  trailColor: '#eee',
  trailWidth: 1,
  svgStyle: {width: '100%', height: '100%'}
});

bar.animate(1.0);

////////////////////////////// Cards

# Cards

<a href="http://materializecss.com/cards.html">Cards</a> are a utility extracted from  <a href="http://materializecss.com/">Materialize framework </a>to display information in a new way.

You can use blue dashboard customized cards by including the blue dashboard style file in addition to thematerialize css JS file and use the cards as shown in th example.



```HTML
<!-- Materialize JS -->

<script type="text/javascript" src="assets/vendors/materialize/materialize.min.js"></script>

<!-- Basic cards -->

<div class="card info-mid">
    <div class="card-content white-text">
        <span class="card-title">Card Title</span>
        <p>
        I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively. I am similar to what is called a panel in other frameworks.
        </p>
    </div>
    <div class="card-action">
        <a href="#" class="default-dahsboard-link">This is a link</a>
        <a href="#" class="default-dahsboard-link">This is a link</a>
    </div>
</div>

<!-- Horizontal Card -->

<div class="card horizontal">
    <div class="card-image">
        <img alt="card title" src="assets/images/card_03.jpg">
    </div>
    <div class="card-stacked">
        <div class="card-content">
            <p>I am a very simple card. I am good at containing small bits of information.</p>
        </div>
        <div class="card-action">
            <button type="button" class="btn btn-link">This is a link<button>
        </div>
    </div>
</div>
<!-- Card reveal -->

<div class="card">
    <div class="card-image">
        <img alt="card title" class="activator" src="assets/images/card_02.jpg">
    </div>
    <div class="card-content">
        <span class="card-title activator grey-text text-darken-4">Card Title<i class="material-icons right">more_vert</i></span>
        <p>I am a very simple card.</p>
    </div>
    <div class="card-action">
        <button type="button" class="btn btn-link">This is a link</button>
    </div>
    <div class="card-reveal">
        <span class="card-title grey-text text-darken-4">Card Title<i class="material-icons right">close</i></span>
        <p>Here is some more information about this product that is only revealed once clicked on.</p>
    </div>
</div>

```

//////////////////////////// Lists

# Lists

Lists are a easy tool to use. Based on bootstrap lists blue dashboard lists provide a variety of options to use when listing your information.

All you need to do to start using blue dashboard's lists is to include the blue dashboard styles file.


<aside class="notice">
Please note that if you intend to use the toggle list you need to include the <a href="http://bootstrapswitch.com/">Bootstrap switch</a> library.
</aside>
```HTML
<!-- Basic list -->

<div class="list-group glyph-color">
    <a class="list-group-item">
        <div class="glyphicon glyphicon-text-size"></div> First item</a>
    <a class="list-group-item">
        <div class="glyphicon glyphicon-menu-hamburger"></div> Second item</a>
    <a class="list-group-item">
        <div class="glyphicon glyphicon-stats"></div> Third item</a>
    <a class="list-group-item">
        <div class="glyphicon glyphicon-send"></div> Forth item</a>
    <a class="list-group-item">
        <div class="glyphicon glyphicon-flash"></div> Fifth item</a>
</div>

<!-- Blog list -->

<div class="list-group">
    <a class="list-group-item">
        <div class="row">
            <div class="col-sm-3">
                <img src="assets/images/card_01.jpg" class="blog-img side-line">
            </div>
            <div class="col-sm-9">
                <span>Title goes here Title goes here Title goes here Title goes here. </span>
                <br>
                <p class="list-date">Oct 22, 2016</p>
            </div>
        </div>
    </a>
    <a class="list-group-item">
        <div class="row">
            <div class="col-sm-3">
                <img src="assets/images/card_02.jpg" class="blog-img side-line">
            </div>
            <div class="col-sm-9">
                <span>Title goes here Title goes here Title goes here Title goes here. </span>
                <br>
                <p class="list-date">Aug 20, 2017</p>
            </div>
        </div>
    </a>
</div>

<!-- List With Header -->

<ul class="list-group glyph-color">
    <li class="list-group-item">
        <div class="row">
            <div class="col-sm-10 no-padding-right">
                <h5 class="title-border">First</h5>
            </div>
            <div class="col-sm-2 no-padding-left">
                <div class="glyphicon glyphicon-flash icon-list-border"></div>
            </div>
        </div>
        <p class="box-size">Lorem ipsum dolor sit amet, cMaecenas ut fringilla libero. Nullam a rhoncus.</p>
    </li>
    <li class="list-group-item">
        <div class="row">
            <div class="col-sm-10 no-padding-right">
                <h5 class="title-border">Second</h5>
            </div>
            <div class="col-sm-2 no-padding-left">
                <div class="glyphicon glyphicon-text-size icon-list-border"></div>
            </div>
        </div>
        <p class="box-size">Lorem ipsum dolor sit amet, cMaecenas ut fringilla libero. Nullam a rhoncus.</p>
    </li>
    <li class="list-group-item">
        <div class="row">
            <div class="col-sm-10 no-padding-right">
                <h5 class="title-border">Third</h5>
            </div>
            <div class="col-sm-2 no-padding-left">
                <div class="glyphicon  glyphicon-stats icon-list-border"></div>
            </div>
        </div>
        <p class="box-size">Lorem ipsum dolor sit amet, consectetur adipiscing.</p>
    </li>
</ul>
```